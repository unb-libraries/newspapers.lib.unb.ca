<?php

use Drupal\serial_holding\Entity\SerialHolding;

/**
 * @file
 * Contains install and update functions for serial_holding.
 */

/**
 * Rename any physical holding types to print.
 */
function serial_holding_update_8101() {
  $physical_holding_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(
      [
        'vid' => 'serial_holding_types',
        'name' => 'Physical',
      ]
    );

  foreach ($physical_holding_terms as $term) {
    $term->setName('Print');
    $term->save();
  }
}

/**
 * Rename any Digital holding types to Online.
 */
function serial_holding_update_8102() {
  $physical_holding_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(
      [
        'vid' => 'serial_holding_types',
        'name' => 'Digital',
      ]
    );

  foreach ($physical_holding_terms as $term) {
    $term->setName('Online');
    $term->save();
  }
}

/**
 * Ensure we now have a new 'Digital' type.
 */
function serial_holding_update_8103() {
  $digital_holding_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(
      [
        'vid' => 'serial_holding_types',
        'name' => 'Digital',
      ]
    );

  if (empty($digital_holding_terms)) {
    $term = \Drupal\taxonomy\Entity\Term::create([
      'name' => 'Digital',
      'vid' => 'serial_holding_types',
    ])->save();
  }

}

/**
 * Rename Microfilm holding type to Microform.
 */
function serial_holding_update_8104() {
  $microfilm_holding_terms = \Drupal::entityTypeManager()
    ->getStorage('taxonomy_term')
    ->loadByProperties(
      [
        'vid' => 'serial_holding_types',
        'name' => 'Microfilm',
      ]
    );

  foreach ($microfilm_holding_terms as $term) {
    $term->setName('Microform');
    $term->save();
  }
}

/**
 * Add Serial Holding Institution field.
 */
function serial_holding_update_8105() {
  $database = \Drupal::database();
  $transaction = $database->startTransaction('add_holding_institution_field');
  try {
    addInstitutionField_8105();
  }
  catch (\Exception $e) {
    $transaction->rollBack();
    $error = 'An error occurred while trying to install the "holding_institution" field. The field was not added: ' .
      $e->getMessage() . "\n\n" .
      $e->getTraceAsString();
    \Drupal::logger('db')->error($error);
    throw new UpdateException($error);
  }
}

/**
 * Install a new 'holding_institution' field for 'serial_holding' entity (re: update 8105).
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function addInstitutionField_8105() {
  $entity_id = 'serial_holding';
  $name = 'holding_institution';

  $field_storage = \Drupal::entityTypeManager()->getStorage($entity_id);
  $entity_type_id = $field_storage->getEntityTypeId();
  $base_field_definitions = SerialHolding::baseFieldDefinitions($field_storage->getEntityType());
  $storage_definition = $base_field_definitions[$name];
  $definition_manager = \Drupal::entityDefinitionUpdateManager();

  $definition_manager->installFieldStorageDefinition(
    $name,
    $entity_type_id,
    $entity_id,
    $storage_definition
  );
}
